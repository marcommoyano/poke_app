{"version":3,"sources":["components/container/container.module.css","services/poke.service.tsx","components/pokemon-card/pokemon-card.tsx","components/search-card/search-card.tsx","components/container/container.tsx","App.js","index.js"],"names":["module","exports","fetchAllPokemons","url","a","fetch","response","json","pokemons","fetchPokemon","name","pokemon","PokemonCard","useState","id","setId","useEffect","setPokemonId","urlId","split","slice","hoverable","cover","alt","src","title","SearchCard","console","log","styles","require","Container","setPokemons","setPokemon","nextPag","setNextPag","prevPag","setPrevPag","urlImages","setUrlImages","pokeSearch","setPokeSearch","setUrl","pokemonsList","results","next","previous","value","pokemonResult","arrayImages","k","sprites","push","filter","e","fetchGetPokemons","className","header","container","searcher","placeholder","onSearch","fetchGetPokemon","enterButton","row","map","key","column","buttons","type","onClick","disabled","footer","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92cd50c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__15xk9\",\"column\":\"container_column__2ojqj\",\"row\":\"container_row__61JVJ\",\"searcher\":\"container_searcher__2et4v\",\"footer\":\"container_footer__2W0-X\",\"card\":\"container_card__c6Edv\",\"header\":\"container_header__3qYX3\",\"buttons\":\"container_buttons__2CpZn\"};","\nexport const fetchAllPokemons = async (url: string) => {\n  const response = await fetch(url)\n  const pokemons = await response.json()\n\n  return pokemons\n}\n\nexport const fetchPokemon = async (name: string) => {\n  const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\n  const pokemon = await response.json()\n\n  return pokemon\n}\n","import { Card } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface IPokemonCard {\n  url: string;\n  name: string;\n}\n\nconst PokemonCard: React.FC<IPokemonCard> = ({\n  url, name\n}) => {\n\n  const [id, setId] = useState('')\n\n  useEffect(() => {\n    setPokemonId()\n  });\n\n  const setPokemonId = () => {\n    const urlId = url.split('/').slice(-2)[0]\n    setId(urlId)\n  };\n\n  return(\n      <Card\n        hoverable\n        cover={<img alt=\"example\" src={id ? `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png` : ''} />}\n      >\n        <Meta title={name}/>\n      </Card>\n  );\n};\n\nexport default PokemonCard;\n","import { Card } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface ISearchCard {\n  url: string;\n}\n\nconst SearchCard: React.FC<ISearchCard> = ({\n  url\n}) => {\n\n  // const [id, setId] = useState('')\n\n  useEffect(() => {\n    // setPokemonId()\n  }, []);\n\n  // const setPokemonId = () => {\n  //   const urlId = url.split('/').slice(-2)[0]\n  //   setId(urlId)\n  // };\n\n  console.log(\"URL\", url)\n\n  return(\n    <>\n      <Card\n        hoverable\n        cover={<img alt=\"example\" src={url} />}\n      >\n      </Card>\n    </>\n  );\n};\n\nexport default SearchCard;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport { fetchAllPokemons, fetchPokemon } from '../../services/poke.service'\nimport PokemonCard from '../pokemon-card/pokemon-card';\nimport SearchCard from '../search-card/search-card';\nimport Search from \"antd/lib/input/Search\";\nimport { Button } from \"antd\";\n\nconst styles = require(\"./container.module.css\");\n\nconst Container: React.FC<any> = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [pokemon, setPokemon] = useState(null);\n  const [nextPag, setNextPag] = useState('');\n  const [prevPag, setPrevPag] = useState('');\n  const [urlImages, setUrlImages] = useState([]);\n  const [pokeSearch, setPokeSearch] = useState('');\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\n\n  useEffect(() => {\n    fetchGetPokemons()\n  }, [url]);\n\n  async function fetchGetPokemons(){\n    const pokemonsList = await fetchAllPokemons(url)\n    setPokemons(pokemonsList.results)\n    setNextPag(pokemonsList.next)\n    setPrevPag(pokemonsList.previous)\n  }\n\n  async function fetchGetPokemon(value: string){\n    const pokemonResult = await fetchPokemon(value)\n    setPokemon(pokemonResult)\n    let arrayImages = []\n    if(pokemonResult){\n      // const keys =  Object.keys(pokemonResult.sprites)\n      for(var k in pokemonResult.sprites){\n        const value = pokemonResult.sprites[k]\n        if(value){\n          arrayImages.push(value)\n        }\n      }\n      setUrlImages(arrayImages.filter(e => typeof e === 'string' && e))\n    }\n  }\n\n  const onSearch = (value: any) => {\n    if(value) {\n      fetchGetPokemon(value)\n      setPokeSearch(value)\n    }else{\n      setPokemon(null)\n    }\n  }\n\n  const clickNextPage = () => {\n    setUrl(nextPag)\n    setPokemon(null)\n    setPokeSearch('')\n  }\n\n  const clickPrevPage = () => {\n    setUrl(prevPag)\n    setPokemon(null)\n    setPokeSearch('')\n  }\n\n  return( \n    <>\n      <div className={styles.header}>\n        PokeAPP\n      </div>\n      <div className={styles.container}>\n        <div className={styles.searcher}>\n          <p>Para buscar un pokemon en específico escribe su nombre</p>\n          <Search placeholder=\"Escribe el nombre de un pokemon\" onSearch={onSearch} enterButton />\n        </div>\n        {pokeSearch ? \n          <div className={`${styles.row}`}> \n            {pokemon && \n              \n              urlImages.map( (key: string) => {\n                return (\n                  <div className={`${styles.column}`} key={key}>\n                    <SearchCard\n                      url={key} \n                    />\n                  </div>\n                );\n            })}\n          </div> \n          :\n          <div className={`${styles.row}`}>\n            {pokemons.map(({ url, name }) => {\n              return (\n                <div className={`${styles.column}`} key={name}>\n                  <PokemonCard\n                    url={url}\n                    name={name} />\n                </div>\n              );\n            })}\n          </div>\n        }\n        <div className={styles.buttons}>\n          <Button type=\"primary\" onClick={() => clickPrevPage()} disabled={!!!prevPag}>\n            Página anterior\n          </Button>\n          <Button type=\"primary\" onClick={() => clickNextPage()}>\n            Página siguiente\n          </Button>\n        </div>\n      </div>\n      <footer className={styles.footer}>\n        Desarrollado por: Marcom Moyano - API Utilizada: https://pokeapi.co/\n      </footer>\n    </>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport Container from './components/container/container.tsx';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Container />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n\n"],"sourceRoot":""}